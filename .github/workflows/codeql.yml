name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '38 13 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: manual
        - language: java-kotlin
          build-mode: manual
        - language: swift
          build-mode: manual

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Set up JDK 1.8
      if: matrix.language == 'java-kotlin'
      uses: actions/setup-java@v3
      with:
        java-version: '1.8'
        distribution: 'adopt'

    - name: Build Java/Kotlin project
      if: matrix.language == 'java-kotlin'
      run: ./gradlew clean build

    - name: Set up Swift environment
      if: matrix.language == 'swift'
      run: |
        sudo gem install cocoapods
        pod install

    - name: Build Swift project
      if: matrix.language == 'swift'
      run: xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12' clean build

    - name: Build C/C++ project
      if: matrix.language == 'c-cpp'
      run: |
        mkdir build
        cd build
        cmake ..
        make

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
